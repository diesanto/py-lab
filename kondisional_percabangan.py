# -*- coding: utf-8 -*-
"""Kondisional_Percabangan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1me2gzS74tCQeALjh81K43W51oQZHTfWK

Kita akan menggunakan if dan else untuk membangun sebuah kondisi atau percabangan. Kita dapat menggunakan if saja atau keduanya. Statement if memerlukan sebuah kondisi yang dibangun dengan menggunakan operator logika dan operator relasional. Sedangkan else akan menerima kondisi yang tidak sesuai dengan kondisi di dalam if atau sebelumnya.

```
# if statement
if syarat:
    kondisi...      
    kondisi...
```
Di Python, untuk membentuk if tidak menggunakan kurawal seperti pada Java atau PHP. Tapi menggunakan titik dua, dan baris yang akan diproses setelah kondisi harus berada satu tab dibawahnya. Syarat harus bernilai boolean (True atau False). Jika syarat bernilai True, maka kondisi akan dijalankan. Sedangkan jika bernilai False maka tidak dilakukan apa-apa.
"""

n = 10

if n >= 10:
    print(True)

"""```
# if-else statement
if syarat:
     kondisi1...      
else:     
     kondisi2...
```
Statement Else dapat digunakan dengan IF Statement, untuk menangani saat kondisi / hasil evaluasi bernilai False. Jika syarat bernilai True, maka kondisi1 akan dijalankan. Sedangkan jika bernilai False maka kondisi2 yang akan dijalankan.
"""

n = 10

if n >= 10:
    print(True)
else:
    print(False)

"""```
# elif statement
if syarat1:
    kondisi1...      
elif syarat2:     
    kondisi2...
elif syarat3:     
    kondisi3...
dst
```

Elif adalah kependekan dari else if. Sebuah IF Statement dapat diikuti satu atau lebih statement elif (opsional & tidak dibatasi). Jika syarat1 bernilai True, maka kondisi1 akan dijalankan sedangkan kondisi di bawahnya (syarat2 dan syarat3) semua diabaikan. Jika syarat1 bernilai false, maka akan dilakukan pengecakan syarat di bawahnya (syarat2). Jika syarat2 bernilai True, maka kondisi2 akan dijalankan sedangkan syarat diatasnya (syarat1) dan dibawahnya (syarat2) diabaikan. Tetapi jika syarat2 bernilai False, maka akan dilakukan pengecakan syarat di bawahnya (syarat3). Jika syarat3 bernilai True, maka kondisi3 akan dijalankan, sedangkan syarat diatasnya (syarat1 dan syarat2) diabaikan.
"""

bil = int(input('Masukan sebuah bilangan bulat : '))

if bil == 0:
    print('Termasuk bilangan Nol')
elif bil < 0:
    print('Termasuk bilangan Negatif')
elif bil % 2 == 0:
    print('Termasuk bilangan Genap')
else:
    print('Termasuk bilangan Ganjil')

"""```
# Nested if statements
if syarat1:
    if sub_syarat1
      kondisi1_1...
    else:
      kondisi1_2      
elif syarat2:     
    if sub_syarat2
      kondisi2_1...
    else:
      kondisi2_2 
elif syarat3:     
    if sub_syarat3
      kondisi3_1...
    else:
      kondisi3_2 
dst
```
Didalam ekpresi (else atau elif) bisa terdapat percabangan atau kondisional  (if-else) lagi yang disebut sebagai kondisonal atau percabangan bersarang (nested if). Untuk lebih jelasnya dapat melihat contoh berikut ini.
"""

bil = int(input('Masukan sebuah bilangan bulat : '))

if bil == 0:
    print('Termasuk bilangan Nol')
elif bil % 2 == 0:
    if(bil > 0):
        print('Termasuk bilangan Genap Positif')
    else:
        print('Termasuk bilangan Genap Negatif')
else:
    if(bil > 0):
        print('Termasuk bilangan Ganjil Positif')
    else:
        print('Termasuk bilangan Ganjil Negatif')

"""**Ternary operator** lebih dikenal sebagai conditional expressions pada Python. Operator menentukan sesuatu berdasarkan kondisi True atau False. Jika statement atau klausa if Anda cukup sederhana, maka ternary Operators akan sangat membantu.



```
# Ternary operator
kondisi_if_true if syarat else kondisi_if_false
```
Perhatikan kasus berikut :
Menggunakan operator komparasi buatlah program yang terdiri dari dua baris 
yang akan mencetak data dengan ketentuan sebagai berikut :
1. input berupa bilangan integer
2. jika input kurang dari 100 akan mencetak nilai False
3. dan jika input lebih besar atau sama dengan 100 akan mencetak nilai True
"""

n = int(input('Masukan bilangan : '))

print(True if n >= 100 else False)
